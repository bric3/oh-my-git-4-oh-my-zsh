{"name":"oh-my-git-4-oh-my-zsh","tagline":"An opinionated git prompt status, tailored for oh-my-zsh","body":"oh-my-git _for_ oh-my-zsh\r\n=========================\r\n\r\nThis plugin is an opinionated git prompt status, tailored for [**oh-my-zsh**](https://github.com/robbyrussell/oh-my-zsh). It is based on the work of [fabulous work](https://github.com/arialdomartini/oh-my-git/) of Arialdo Martini. \r\n\r\nThis derivative fork is taken from my pull request on his project [there](https://github.com/arialdomartini/oh-my-git/pull/22).\r\n\r\n![oh-my-git in action](http://bric3.github.io/oh-my-git-4-oh-my-zsh/images/oh-my-git.in.action.png)\r\n\r\n## Reading the abstract\r\n\r\nThis new git information script (`oh-my-git.plugin.zsh`) has a few bullet points\r\n\r\n   * Show more information than usual git prompt status function here and there, thanks to Arialdo Martini for that\r\n   * Configurable color and symbols (or string)\r\n   * Configurable suffix and prefix\r\n   * Toggleable per git repository (`git config --get oh-my-zsh.hide-status`)\r\n   * Toggleable git repository symbol (`display_git_symbol`)\r\n   * Git _off_ flags (like content in stash or untracked files) can be either displayed or not (`use_color_off`) Toggleable empty spaces when git flag is on or off  (`print_unactive_flags_space`)\r\n   * Git _off_ flags can be ommited in the status (with both `use_color_off=false` and `print_unactive_flags_space=false`)\r\n   * Showing current git action (`REBASE-i`, `REBASE-m`, `REBASE`, `AM/REBASE`, `MERGING`, `BISECTING`, `CHERRY-PICKING`)\r\n   * External configuration is optional, defaults are already configured\r\n\r\nOn a technical ground \r\n\r\n   * The shell script file and function are more human compatible. And this layout is directly working with oh-my-zsh plugins layout.\r\n   * While designed with oh-my-zsh in mind it is does not depend on a specific shell\r\n   * Doesn't leak variables\r\n\r\n\r\n## Install the git prompt status\r\n\r\nThis install assume the current shell is **ZSH** with [**oh-my-zsh**](https://github.com/robbyrussell/oh-my-zsh) already installed.\r\n\r\nInstall a clone of this repository in oh-my-zsh plugin [custom folder](https://github.com/robbyrussell/oh-my-zsh/wiki/Customization). *Note it is possible to change the default custom directory of oh-my-zsh by redefining the `$ZSH_CUSTOM` in the `.zshrc` *\r\n\r\n```bash\r\nmkdir -p $ZSH_CUSTOM/plugins\r\ngit clone git@github.com:bric3/oh-my-git-4-oh-my-zsh.git $ZSH_CUSTOM/plugins/oh-my-git\r\n```\r\n\r\nThis will make _oh-my-git_ available as a plugin for _oh-my-zsh_. Now you still need to activate it. In your `.zshrc` just activate the plugin by adding `oh-my-git` to the `plugins` variable :\r\n\r\n```\r\nplugins=(\r\n # custom plugins\r\n git2\r\n oh-my-git\r\n\r\n # bundled plugins\r\n github\r\n osx\r\n mosh\r\n ...\r\n```\r\n\r\nAnd finally use the main function in your theme. For example to place it in the right part of your theme use the `RPROMPT` environment variable : \r\n\r\n```\r\nRPROMPT='$(oh_my_git_info)'\r\n```\r\n\r\n\r\n## Customize it\r\n\r\nIn order to customize either the symbol, the color or if some symbol should be displayed define on of these varaible in your oh-my-zsh theme.\r\n\r\nFor example in your theme set the following variables to have a prompt info that will look like : `[(master ᄉ origin)]`\r\n\r\n```bash\r\n# oh-my-git config\r\nomg_prefix=\" %{%B%F{green}%}[%{%f%k%b%}\"\r\nomg_suffix=\"%{%B%F{green}%}]%{%f%k%b%}\"\r\n\r\ndisplay_git_symbol=false\r\ndisplay_git_current_action=left\r\nprint_unactive_flags_space=false\r\n```\r\n\r\nHere is the possible variables and flags with their default value\r\n\r\n\r\n### Options\r\n\r\noption variable                    | value\r\n---------------------------------- | ----------\r\ndisplay_has_upstream               | `false`\r\ndisplay_tag                        | `false`\r\ndisplay_tag_name                   | `true`\r\nuse_color_off                      | `false`\r\nprint_unactive_flags_space         | `true`\r\ndisplay_git_symbol                 | `true`\r\ndisplay_git_current_action         | `false`\r\n\r\n### Symbols and related colors\r\n\r\nsymbol and color variable          | value\r\n---------------------------------- | ----------\r\nis_a_git_repo_symbol               | `±`\r\nis_a_git_repo_color                | `$violet`\r\nhas_untracked_files_symbol         | `∿`\r\nhas_untracked_files_color          | `$red`\r\nhas_adds_symbol                    | `+`\r\nhas_adds_color                     | `$yellow`\r\nhas_deletions_symbol               | `-`\r\nhas_deletions_color                | `$red`\r\nhas_deletions_cached_symbol        | `✖`\r\nhas_deletions_cached_color         | `$yellow`\r\nhas_modifications_symbol           | `✎`\r\nhas_modifications_color            | `$red`\r\nhas_modifications_cached_symbol    | `☲`\r\nhas_modifications_cached_color     | `$yellow`\r\nready_to_commit_symbol             | `→`\r\nready_to_commit_color              | `$green`\r\nis_on_a_tag_symbol                 | `⌫`\r\nis_on_a_tag_color                  | `$yellow`\r\nneeds_to_merge_symbol              | `ᄉ`\r\nneeds_to_merge_color               | `$yellow`\r\nhas_upstream_symbol                | `⇅`\r\nhas_upstream_color                 | `$on`\r\nhas_no_upstream_color              | `$on`\r\ndetached_symbol                    | `⚯`\r\ndetached_color                     | `$red`\r\ndetached_current_commit_color      | `$on`\r\ncan_fast_forward_symbol            | `»`\r\ncan_fast_forward_color             | `$on`\r\nhas_diverged_symbol                | `Ⴤ`\r\nhas_diverged_color                 | `$red`\r\nrebase_tracking_branch_symbol      | `↶`\r\nrebase_tracking_branch_color       | `$reset`\r\nmerge_tracking_branch_symbol       | `ᄉ`\r\nmerge_tracking_branch_color        | `$reset`\r\nshould_push_symbol                 | `↑`\r\nshould_push_color                  | `$on`\r\nhas_stashes_symbol                 | `★`\r\nhas_stashes_color                  | `$yellow`\r\ncommits_behind_symbol              | `-`\r\ncommits_behind_color               | `$reset`\r\ncommits_ahead_symbol               | `+`\r\ncommits_ahead_color                | `$reset`\r\ncurrent_branch_color               | `$green`\r\ntag_name_color                     | `$yellow`\r\n\r\n\r\n### Default colors \r\n\r\nFor the ZSH shell, the default values are the [ZSH prompt escape sequences](http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html) which are correctly interpreted to match the terminal width.\r\n\r\ndisplay variable                   | value\r\n---------------------------------- | ----------\r\non                                 | `%B`\r\noff                                | `%b`\r\ngreen                              | `%F{green}`\r\nred                                | `%F{red}`\r\nviolet                             | `%F{magenta}`\r\nyellow                             | `%F{yellow}`\r\nreset                              | `%{%f%k%b%}`\r\n\r\n\r\n\r\n## Show a demo\r\n\r\nA rather long demo with [asciinema](https://asciinema.org/a/10426)\r\n\r\n\r\n<script type=\"text/javascript\" src=\"https://asciinema.org/a/10426.js\" id=\"asciicast-10426\" async></script>\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}